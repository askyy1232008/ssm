<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

	<!-- 扫描到有@Component以及其子注解@Repository、@Service和 @Controller等这些注解的类，则把这些类注册为bean -->
	<!-- 设置了include-filter时 只扫描base-package指定下的有@Controller下的java类，并注册成bean -->
	<context:component-scan base-package="com.lee.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<context:component-scan base-package="com.lee.service" />

	<!-- 设置能访问静态资源 -->
	<mvc:default-servlet-handler />
	<!-- 使以下注解生效 : @Controller、@RequestMapping@ResponseBody@RequestParam等,并可以扩展设置传入和传出参数的类型转换为String或JSON -->
	<mvc:annotation-driven />
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter" />
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- 静态资源访问配置 -->
	<mvc:resources location="/assets/" mapping="/assets/**"></mvc:resources>
	<mvc:resources location="/html/" mapping="/html/**"></mvc:resources>
	<mvc:resources location="/jsp/" mapping="/jsp/**"></mvc:resources>

	<!-- 视图层配置jsp,html -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
	<bean id="viewResolver1"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/html/"></property>
		<property name="suffix" value=".html"></property>
		<property name="order" value="0"></property>
	</bean>
</beans>