<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lee.dao.LoanLogDao">
	<resultMap id="BaseResultMap" type="com.lee.pojo.LoanLog">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="totalrepayment" property="totalrepayment"
			jdbcType="DOUBLE" />
		<result column="thatmonthhasreturned"
			property="thatmonthhasreturned" jdbcType="DOUBLE" />
		<result column="payeddate" property="payeddate" jdbcType="DATE" />
		<result column="accumulatedrepayment"
			property="accumulatedrepayment" jdbcType="DOUBLE" />
		<result column="surplusshouldalsobereturned"
			property="surplusshouldalsobereturned" jdbcType="DOUBLE" />
		<result column="loanid" property="loanid" jdbcType="INTEGER" />
		<result column="truckid" property="truckid" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="nowpay" property="nowpay" jdbcType="DOUBLE" />
	</resultMap>
	<sql id="Base_Column_List">
		id, totalrepayment, thatmonthhasreturned, payeddate,
		accumulatedrepayment, surplusshouldalsobereturned,
		loanid, truckid,
		remark, nowpay
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from loanlog_t
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from loanlog_t
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.lee.pojo.LoanLog">
		insert into loanlog_t (id,
		totalrepayment, thatmonthhasreturned,
		payeddate, accumulatedrepayment,
		surplusshouldalsobereturned,
		loanid, truckid, remark,
		nowpay)
		values
		(#{id,jdbcType=INTEGER}, #{totalrepayment,jdbcType=DOUBLE},
		#{thatmonthhasreturned,jdbcType=DOUBLE},
		#{payeddate,jdbcType=DATE},
		#{accumulatedrepayment,jdbcType=DOUBLE},
		#{surplusshouldalsobereturned,jdbcType=DOUBLE},
		#{loanid,jdbcType=INTEGER}, #{truckid,jdbcType=INTEGER},
		#{remark,jdbcType=VARCHAR},
		#{nowpay,jdbcType=DOUBLE})
	</insert>
	<insert id="insertSelective"
		parameterType="com.lee.pojo.LoanLog">
		insert into loanlog_t
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="totalrepayment != null">
				totalrepayment,
			</if>
			<if test="thatmonthhasreturned != null">
				thatmonthhasreturned,
			</if>
			<if test="payeddate != null">
				payeddate,
			</if>
			<if test="accumulatedrepayment != null">
				accumulatedrepayment,
			</if>
			<if test="surplusshouldalsobereturned != null">
				surplusshouldalsobereturned,
			</if>
			<if test="loanid != null">
				loanid,
			</if>
			<if test="truckid != null">
				truckid,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="nowpay != null">
				nowpay,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="totalrepayment != null">
				#{totalrepayment,jdbcType=DOUBLE},
			</if>
			<if test="thatmonthhasreturned != null">
				#{thatmonthhasreturned,jdbcType=DOUBLE},
			</if>
			<if test="payeddate != null">
				#{payeddate,jdbcType=DATE},
			</if>
			<if test="accumulatedrepayment != null">
				#{accumulatedrepayment,jdbcType=DOUBLE},
			</if>
			<if test="surplusshouldalsobereturned != null">
				#{surplusshouldalsobereturned,jdbcType=DOUBLE},
			</if>
			<if test="loanid != null">
				#{loanid,jdbcType=INTEGER},
			</if>
			<if test="truckid != null">
				#{truckid,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="nowpay != null">
				#{nowpay,jdbcType=DOUBLE},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.lee.pojo.LoanLog">
		update loanlog_t
		<set>
			<if test="totalrepayment != null">
				totalrepayment = #{totalrepayment,jdbcType=DOUBLE},
			</if>
			<if test="thatmonthhasreturned != null">
				thatmonthhasreturned =
				#{thatmonthhasreturned,jdbcType=DOUBLE},
			</if>
			<if test="payeddate != null">
				payeddate = #{payeddate,jdbcType=DATE},
			</if>
			<if test="accumulatedrepayment != null">
				accumulatedrepayment =
				#{accumulatedrepayment,jdbcType=DOUBLE},
			</if>
			<if test="surplusshouldalsobereturned != null">
				surplusshouldalsobereturned =
				#{surplusshouldalsobereturned,jdbcType=DOUBLE},
			</if>
			<if test="loanid != null">
				loanid = #{loanid,jdbcType=INTEGER},
			</if>
			<if test="truckid != null">
				truckid = #{truckid,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="nowpay != null">
				nowpay = #{nowpay,jdbcType=DOUBLE},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.lee.pojo.LoanLog">
		update loanlog_t
		set totalrepayment =
		#{totalrepayment,jdbcType=DOUBLE},
		thatmonthhasreturned =
		#{thatmonthhasreturned,jdbcType=DOUBLE},
		payeddate =
		#{payeddate,jdbcType=DATE},
		accumulatedrepayment =
		#{accumulatedrepayment,jdbcType=DOUBLE},
		surplusshouldalsobereturned =
		#{surplusshouldalsobereturned,jdbcType=DOUBLE},
		loanid =
		#{loanid,jdbcType=INTEGER},
		truckid = #{truckid,jdbcType=INTEGER},
		remark = #{remark,jdbcType=VARCHAR},
		nowpay = #{nowpay,jdbcType=DOUBLE}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="getLoanLogByLoanidOrderByIdLimitOne"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from loanlog_t
		where loanid = #{loanid,jdbcType=INTEGER}
		order by id
		desc
		limit 1
	</select>
	<select id="countByLoanid" resultType="java.lang.Integer">
		select count(id)
		from
		loanlog_t
		where loanid = #{loanid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByLoanid" parameterType="java.lang.Integer">
		delete from loanlog_t
		where loanid = #{loanid,jdbcType=INTEGER}
	</delete>
	<select id="getThisLoanAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from loanlog_t
		where loanid = #{loanid,jdbcType=INTEGER}
		order by id
		asc
	</select>
	<select id="countThisLoanAll" resultType="java.lang.Integer">
		select count(id)
		from loanlog_t
		where loanid = #{loanid,jdbcType=INTEGER}
	</select>
	<select id="getThatLastLoanLogIdByLoanid" resultType="java.lang.Integer">
		select id 
		from loanlog_t
		where loanid = #{loanid,jdbcType=INTEGER}
		order by id desc
		limit 1
	</select>
	<select id="countByTruckid" resultType="java.lang.Integer">
		select count(id)
		from
		loanlog_t
		where truckid = #{truckid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByTruckid" parameterType="java.lang.Integer">
		delete from
		loanlog_t
		where truckid = #{truckid,jdbcType=INTEGER}
	</delete>
</mapper>